// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: modules.sql

package learnings

import (
	"context"

	"github.com/google/uuid"
)

const getModule = `-- name: GetModule :one
SELECT
    id, course_id, experience_level
FROM
    modules
WHERE
    id = $1
LIMIT
    1
`

func (q *Queries) GetModule(ctx context.Context, id uuid.UUID) (Module, error) {
	row := q.db.QueryRowContext(ctx, getModule, id)
	var i Module
	err := row.Scan(&i.ID, &i.CourseID, &i.ExperienceLevel)
	return i, err
}

const getModules = `-- name: GetModules :many
SELECT
    id, course_id, experience_level
FROM
    modules
`

func (q *Queries) GetModules(ctx context.Context) ([]Module, error) {
	rows, err := q.db.QueryContext(ctx, getModules)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Module
	for rows.Next() {
		var i Module
		if err := rows.Scan(&i.ID, &i.CourseID, &i.ExperienceLevel); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
